
&ИзменениеИКонтроль("ПередКомпоновкойМакета")
Процедура ГП_ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек)
	
	БухгалтерскиеОтчетыВызовСервера.ДобавитьОтборПоОрганизации(ПараметрыОтчета, КомпоновщикНастроек);
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
		КомпоновщикНастроек, 
		"Организация", 
		ПараметрыОтчета.Организация);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
		КомпоновщикНастроек, 
		"НачалоПериода", 
		НачалоДня(ПараметрыОтчета.НачалоПериода));
	
	КонецПериода = ?(ЗначениеЗаполнено(ПараметрыОтчета.КонецПериода), 
		КонецДня(ПараметрыОтчета.КонецПериода), 
		'39990101');
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
		КомпоновщикНастроек, 
		"КонецПериода", 
		КонецПериода);
	
	ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(ПараметрыОтчета.Организация, ПараметрыОтчета.КонецПериода);
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
		КомпоновщикНастроек,
		"РуководительДолжность",
		ОтветственныеЛица.РуководительДолжность);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
		КомпоновщикНастроек,
		"РуководительПредставление",
		ОтветственныеЛица.РуководительПредставление);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
		КомпоновщикНастроек,
		"ТекущаяДата",
		ОбщегоНазначенияБП.ТекущаяДатаНаСервере());
	
	ПростойУчетЕНС = ПараметрыОтчета.НачалоПериода >= ЕдиныйНалоговыйСчет.НачалоПростогоУчета();
	
	Если ПараметрыОтчета.ВариантОтчета = "РасчетыПоЕНС"
		И Не ПростойУчетЕНС Тогда
		
		ИмяОтчетаРасчетыПоНалогам = НСтр("ru='Расшифровка расчетов налогов по ЕНС'");
		ПериодОтчета = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
			ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода);
		ОстатокПоЕНСНаНачалоПериода = ЕдиныйНалоговыйСчет.ОстатокНаЕдиномНалоговомСчете(
			ПараметрыОтчета.Организация, ПараметрыОтчета.НачалоПериода);
		ОстатокПоЕНСНаКонецПериода = ЕдиныйНалоговыйСчет.ОстатокНаЕдиномНалоговомСчете(
			ПараметрыОтчета.Организация, ПараметрыОтчета.КонецПериода);
		
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
			КомпоновщикНастроек, 
			"ПериодОтчета", 
			ПериодОтчета);
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
			КомпоновщикНастроек, 
			"ОстатокПоЕНСНаНачалоПериода", 
			Формат(ОстатокПоЕНСНаНачалоПериода, "ЧДЦ=2; ЧН=0,00"));
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
			КомпоновщикНастроек, 
			"ОстатокПоЕНСНаКонецПериода", 
			Формат(ОстатокПоЕНСНаКонецПериода, "ЧДЦ=2; ЧН=0,00"));
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
			КомпоновщикНастроек, 
			"ИмяОтчетаРасчетыПоНалогам", 
			ИмяОтчетаРасчетыПоНалогам);
		
	КонецЕсли;
	
	Если ПараметрыОтчета.ВариантОтчета = "РасчетыПоНалогамНаЕНС"
		И ПростойУчетЕНС Тогда
		
		// Все обслуживаемые счета, кроме 68.10, для него есть отдельный запрос
		СчетаНалоговВзносов = ЕдиныйНалоговыйСчетПовтИсп.ОбслуживаемыеСчетаУчета(ПараметрыОтчета.КонецПериода);
		СчетаНалоговВзносов = ОбщегоНазначенияКлиентСервер.РазностьМассивов(
			СчетаНалоговВзносов,
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПланыСчетов.Хозрасчетный.ПрочиеНалогиИСборы));
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
			КомпоновщикНастроек, 
			"СчетаНалоговВзносов", 
			СчетаНалоговВзносов);
        #Вставка // ->>> Гарант+
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
			КомпоновщикНастроек, 
			"ВидСубконтоВидыНалогов", 
			ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоКоду("00067"), Истина);
        #КонецВставки // <<<- Гарант+
		
		ПоказыватьСчетаУчета = СчетаУчетаВДокументахВызовСервераПовтИсп.ПользовательУправляетСчетамиУчета();
		Если Не ПоказыватьСчетаУчета Тогда
			СтруктураОтчета = КомпоновщикНастроек.Настройки.Структура;
			ГруппировкаНалог = БухгалтерскиеОтчеты.НайтиПоИмени(СтруктураОтчета, "Налог");
			ОтключаемыеПоля = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Новый ПолеКомпоновкиДанных("СчетНалога"));
			ОтключитьПоля(ГруппировкаНалог, ОтключаемыеПоля);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыОтчета.ВариантОтчета = "ВедомостьПоЕНС" 
		И ПростойУчетЕНС Тогда
		
		СчетаНалоговВзносов = ЕдиныйНалоговыйСчетПовтИсп.ОбслуживаемыеСчетаУчета(ПараметрыОтчета.КонецПериода);
		СчетаНалоговВзносов = ОбщегоНазначенияКлиентСервер.РазностьМассивов(
			СчетаНалоговВзносов,
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПланыСчетов.Хозрасчетный.ПрочиеНалогиИСборы));
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
			КомпоновщикНастроек,
			"СчетаНалоговВзносов",
			СчетаНалоговВзносов);
			
		ОстатокПоЕНСНаНачалоПериода = ЕдиныйНалоговыйСчет.ОстатокНаЕдиномНалоговомСчете(
			ПараметрыОтчета.Организация, НачалоДня(ПараметрыОтчета.НачалоПериода) - 1);
		ОстатокПоЕНСНаКонецПериода = ЕдиныйНалоговыйСчет.ОстатокНаЕдиномНалоговомСчете(
			ПараметрыОтчета.Организация, ПараметрыОтчета.КонецПериода);
			
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
			КомпоновщикНастроек, 
			"ОстатокПоЕНСНаНачалоПериода",
			ОстатокПоЕНСНаНачалоПериода);
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
			КомпоновщикНастроек, 
			"ОстатокПоЕНСНаКонецПериода",
			ОстатокПоЕНСНаКонецПериода);
			
	КонецЕсли;
	
КонецПроцедуры
