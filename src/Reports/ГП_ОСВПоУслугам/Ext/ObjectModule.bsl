// Гарант+ Килипенко 14.01.2025 [F00233364] Отчет ОСВ по услугам ++
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;

    ИнициализироватьПараметры();

    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных,
            ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(),
            ДанныеРасшифровки, , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));

    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    МВТ = Новый МенеджерВременныхТаблиц;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина, Истина, МВТ);

    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    ДанныеЗаполнения = Новый ТаблицаЗначений;
    Попытка
        ДанныеЗаполнения = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
    Исключение
        ДанныеЗаполнения = Новый Структура("Успех, ТекстОшибки", Ложь);
        ДанныеЗаполнения.ТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ДанныеЗаполнения.Успех = Ложь;
        ВызватьИсключение(ДанныеЗаполнения.ТекстОшибки);
    КонецПопытки;

    // Формирование общих данных
    ПараметрПериодОтчета = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(
            ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки, "ПериодОтчета");
    ПараметрОрганизация = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(
            ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки, "Организация");

    ДанныеЗаполненияШапки = Новый Структура;
    ДанныеЗаполненияШапки.Вставить("ДатаНачала", ПараметрПериодОтчета.Значение.ДатаНачала);
    ДанныеЗаполненияШапки.Вставить("ДатаОкончания", ПараметрПериодОтчета.Значение.ДатаОкончания);
    ДанныеЗаполненияШапки.Вставить("ДатаАктаСверки", ТекущаяДатаСеанса());
    ДанныеЗаполненияШапки.Вставить("Организация", ПараметрОрганизация.Значение);

    ДанныеЗаполнения = ПодготовитьДеревоОтчета(ДанныеЗаполнения);

    ДокументРезультат = Отчеты.ГП_ОСВПоУслугам.СформироватьТабличныйДокументАктаОСВПоУслугамПоДаннымЗаполнения(
            ДанныеЗаполнения, ДанныеЗаполненияШапки, ДокументРезультат);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий
// Гарант+ Килипенко 14.01.2025 [F00233364] Отчет ОСВ по услугам --

// Гарант+ Килипенко 14.01.2025 [F00233364] Отчет ОСВ по услугам ++
#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСчетаИсключения()
    СчетаИсключения = ПланыСчетов.Хозрасчетный.СчетаНДСПоАренднымОбязательствам();
    ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
        СчетаИсключения, ПланыСчетов.Хозрасчетный.СчетаПроцентовПоОбязательствам());
    СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РасчетыНДСНалоговогоАгента);
    СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.КорректировкаРасчетовПрошлогоПериода);

    РезультатФункции = Новый СписокЗначений;
    РезультатФункции.ЗагрузитьЗначения(СчетаИсключения);

    Возврат РезультатФункции;
КонецФункции

Функция ПолучитьСчетаНДСПоАренднымОбязательствам()
    РезультатФункции = Новый СписокЗначений;

    МассивСчетовНДСАрнелы = ПланыСчетов.Хозрасчетный.СчетаНДСПоАренднымОбязательствам();

    РезультатФункции.ЗагрузитьЗначения(МассивСчетовНДСАрнелы);
    Возврат РезультатФункции;
КонецФункции

Функция ПолучитьСчетаУчетаВзаиморасчетов()
    РезультатФункции = Новый СписокЗначений;

    ТаблицаСчетов = УчетВзаиморасчетов.ПолучитьТаблицуСчетовУчетаВзаиморасчетов(Истина, Ложь);

    Для Каждого СтрокаСчета Из ТаблицаСчетов Цикл
        РезультатФункции.Добавить(СтрокаСчета.СчетРасчетов);
    КонецЦикла;

    Возврат РезультатФункции;
КонецФункции

Функция ПолучитьОсновнойНаборДанных()
    Возврат ЭтотОбъект.СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1;
КонецФункции

Процедура ИнициализироватьПараметры()
    // Установка границ периода отчета
    УточнитьПараметрыПериодаОтчета();

    // Заполняем параметр АналитикаРасчетов
    АналитикаРасчетов = Новый СписокЗначений;
    АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
    АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
    БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.Настройки, "АналитикаРасчетов", АналитикаРасчетов);

    // Заполняем параметр СчетаНДСПоАренде
    СчетаНДСПоАренде = ПолучитьСчетаНДСПоАренднымОбязательствам();
    БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.Настройки, "СчетаНДСПоАренде", СчетаНДСПоАренде);

    // Заполняем параметр ФильтрСписокСчетов
    ФильтрСписокСчетов = ПолучитьСчетаУчетаВзаиморасчетов();
    БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.Настройки, "ФильтрСписокСчетов", ФильтрСписокСчетов);

    ПараметрФильтрСписокСчетов =
        БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(
            ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки, "ФильтрСписокСчетов");
    Если ПараметрФильтрСписокСчетов <> Неопределено
        И (ПараметрФильтрСписокСчетов.Значение = Неопределено
            ИЛИ (ТипЗнч(ПараметрФильтрСписокСчетов.Значение) = Тип("СписокЗначений") И ПараметрФильтрСписокСчетов.Значение.Количество() = 0)) Тогда
        БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
            ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки, "ФильтрСписокСчетов", ФильтрСписокСчетов);
    КонецЕсли;
КонецПроцедуры

Функция УточнитьПараметрыПериодаОтчета()
    РезультатФункции = Новый Структура("НачалоПериода, КонецПериода", Дата(1, 1, 1), Дата(1, 1, 1));

    ПараметрПериодОтчета =
        БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(
            ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки, "ПериодОтчета");

    РезультатФункции.НачалоПериода = Новый Граница(НачалоДня(ПараметрПериодОтчета.Значение.ДатаНачала), ВидГраницы.Включая);
    РезультатФункции.КонецПериода = Новый Граница(КонецДня(ПараметрПериодОтчета.Значение.ДатаОкончания), ВидГраницы.Включая);

    БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.Настройки, "НачалоПериода", РезультатФункции.НачалоПериода);

    БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.Настройки, "КонецПериода", РезультатФункции.КонецПериода);

    Возврат РезультатФункции;
КонецФункции

Функция ПодготовитьДеревоОтчета(Знач ИсходнаяТаблица)
    МассивДоговоров = ИсходнаяТаблица.ВыгрузитьКолонку("Договор");

    МВТ = Новый МенеджерВременныхТаблиц;

    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = МВТ;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |    ИсходнаяТаблица.Контрагент КАК Контрагент,
        |    ИсходнаяТаблица.Дата КАК Дата,
        |    ИсходнаяТаблица.Документ КАК Документ,
        |    ИсходнаяТаблица.Договор КАК Договор,
        |    ИсходнаяТаблица.КорСчет КАК КорСчет,
        |    ИсходнаяТаблица.Дебет КАК Дебет,
        |    ИсходнаяТаблица.Кредит КАК Кредит,
        |    ИсходнаяТаблица.ОстатокНаНачало КАК ОстатокНаНачало,
        |    ИсходнаяТаблица.ОстатокНаНачалоДт КАК ОстатокНаНачалоДт,
        |    ИсходнаяТаблица.ОстатокНаНачалоКт КАК ОстатокНаНачалоКт,
        |    ИсходнаяТаблица.Оборот КАК Оборот,
        |    ИсходнаяТаблица.ОборотДт КАК ОборотДт,
        |    ИсходнаяТаблица.ОборотКт КАК ОборотКт,
        |    ИсходнаяТаблица.ОстатокНаКонец КАК ОстатокНаКонец,
        |    ИсходнаяТаблица.ОстатокНаКонецДт КАК ОстатокНаКонецДт,
        |    ИсходнаяТаблица.ОстатокНаКонецКт КАК ОстатокНаКонецКт
        |ПОМЕСТИТЬ ВТ_ИсходнаяТаблица
        |ИЗ
        |   &ИсходнаяТаблица КАК ИсходнаяТаблица
        |;
        |
        |/////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   Договоры.Ссылка КАК Договор,
        |   Договоры.Номер КАК Номер,
        |   ВЫРАЗИТЬ(0 КАК ЧИСЛО(10,0)) КАК ЧисловойНомерДоговора
        |ИЗ
        |   Справочник.ДоговорыКонтрагентов КАК Договоры
        |ГДЕ
        |   Договоры.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Договор ИЗ ВТ_ИсходнаяТаблица КАК Т);
        |";

    Запрос.УстановитьПараметр("ИсходнаяТаблица", ИсходнаяТаблица);
    РезультатЗапроса = Запрос.Выполнить();
    ТаблицаДоговоров = РезультатЗапроса.Выгрузить();
    Для каждого СтрокаДанных Из ТаблицаДоговоров Цикл
        СтрокаДанных.ЧисловойНомерДоговора = ГП_РаботаСДоговорами.ПреобразоватьНомерДоговораВЧислоПринудительно(СтрокаДанных.Номер);
    КонецЦикла;

    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = МВТ;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   *
        |ПОМЕСТИТЬ ВТ_ТаблицаДоговоров
        |ИЗ
        |   &ТаблицаДоговоров КАК ТаблицаДоговоров
        |;
        |
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |    *,
        |   ЕСТЬNULL(ВТ_ТаблицаДоговоров.ЧисловойНомерДоговора, 0) КАК ЧисловойНомерДоговора
        |ПОМЕСТИТЬ ВТ_Результат_Подготовка
        |ИЗ
        |   ВТ_ИсходнаяТаблица КАК ВТ_ИсходнаяТаблица
        |   ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаДоговоров КАК ВТ_ТаблицаДоговоров
        |   ПО ВТ_ИсходнаяТаблица.Договор = ВТ_ТаблицаДоговоров.Договор
        |   И НЕ ВТ_ИсходнаяТаблица.Договор ЕСТЬ NULL
        |;
        |
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |    ВТ_Результат_Подготовка.Контрагент КАК Контрагент,
        |    ВТ_Результат_Подготовка.Дата КАК Дата,
        |    ВТ_Результат_Подготовка.Документ КАК Документ,
        |    ВТ_Результат_Подготовка.Документ.Номер КАК НомерДокумента,
        |    ВТ_Результат_Подготовка.Договор КАК Договор,
        |    ВТ_Результат_Подготовка.Договор.Номер КАК НомерДоговора,
        |    ВТ_Результат_Подготовка.ЧисловойНомерДоговора КАК ЧисловойНомерДоговора,
        |    ВТ_Результат_Подготовка.КорСчет КАК КорСчет,
        |    ВТ_Результат_Подготовка.КорСчет.Код КАК КорСчетПредставление,
        |    ВТ_Результат_Подготовка.Дебет КАК Дебет,
        |    ВТ_Результат_Подготовка.Кредит КАК Кредит,
        |    ВТ_Результат_Подготовка.ОстатокНаНачало КАК ОстатокНаНачало,
        |    ВТ_Результат_Подготовка.ОстатокНаНачалоДт КАК ОстатокНаНачалоДт,
        |    ВТ_Результат_Подготовка.ОстатокНаНачалоКт КАК ОстатокНаНачалоКт,
        |    ВТ_Результат_Подготовка.Оборот КАК Оборот,
        |    ВТ_Результат_Подготовка.ОборотДт КАК ОборотДт,
        |    ВТ_Результат_Подготовка.ОборотКт КАК ОборотКт,
        |    ВТ_Результат_Подготовка.ОстатокНаКонец КАК ОстатокНаКонец,
        |    ВТ_Результат_Подготовка.ОстатокНаКонецДт КАК ОстатокНаКонецДт,
        |    ВТ_Результат_Подготовка.ОстатокНаКонецКт КАК ОстатокНаКонецКт
        |ИЗ
        |    ВТ_Результат_Подготовка КАК ВТ_Результат_Подготовка
        |
        |УПОРЯДОЧИТЬ ПО
        |   ЧисловойНомерДоговора,
        |   НомерДоговора,
        |   Договор,
        |   Контрагент,
        |   Дата
        |
        |ИТОГИ
        |    МИНИМУМ(ВТ_Результат_Подготовка.ЧисловойНомерДоговора),
        |    МИНИМУМ(ВТ_Результат_Подготовка.Договор.Номер),
        |    МАКСИМУМ(ВТ_Результат_Подготовка.ОстатокНаНачало),
        |    МАКСИМУМ(ВТ_Результат_Подготовка.ОстатокНаНачалоДт),
        |    МАКСИМУМ(ВТ_Результат_Подготовка.ОстатокНаНачалоКт),
        |    МАКСИМУМ(ВТ_Результат_Подготовка.Оборот),
        |    МАКСИМУМ(ВТ_Результат_Подготовка.ОборотДт),
        |    МАКСИМУМ(ВТ_Результат_Подготовка.ОборотКт),
        |    МАКСИМУМ(ВТ_Результат_Подготовка.ОстатокНаКонец),
        |    МАКСИМУМ(ВТ_Результат_Подготовка.ОстатокНаКонецДт),
        |    МАКСИМУМ(ВТ_Результат_Подготовка.ОстатокНаКонецКт),
        |    СУММА(ВТ_Результат_Подготовка.Дебет),
        |    СУММА(ВТ_Результат_Подготовка.Кредит)
        |ПО
        |    Договор,
        |    Контрагент
        |";

    Запрос.УстановитьПараметр("ТаблицаДоговоров", ТаблицаДоговоров);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 14.01.2025 [F00233364] Отчет ОСВ по услугам --
