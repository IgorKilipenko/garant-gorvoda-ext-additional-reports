// Гарант+ Килипенко 14.01.2025 [F00233364] Отчет ОСВ по услугам ++
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;

    ИнициализироватьПараметры();

    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных,
            ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(),
            ДанныеРасшифровки, , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));

    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    МВТ = Новый МенеджерВременныхТаблиц;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина, Истина, МВТ);

    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    ДанныеЗаполнения = Новый ТаблицаЗначений;
    ДанныеЗаполнения = ПроцессорВывода.Вывести(ПроцессорКомпоновки);

    // Формирование общих данных
    ПараметрПериодОтчета = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки, "ПериодОтчета");
    ПараметрОрганизация = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки, "Организация");

    ДанныеЗаполненияШапки = Новый Структура;
    ДанныеЗаполненияШапки.Вставить("ДатаНачала", ПараметрПериодОтчета.Значение.ДатаНачала);
    ДанныеЗаполненияШапки.Вставить("ДатаОкончания", ПараметрПериодОтчета.Значение.ДатаОкончания);
    ДанныеЗаполненияШапки.Вставить("ДатаАктаСверки", ТекущаяДатаСеанса());
    ДанныеЗаполненияШапки.Вставить("Организация", ПараметрОрганизация.Значение);

    ДанныеЗаполнения = ПодготовитТаблицуОтчета(ДанныеЗаполнения);

    ДокументРезультат = Отчеты.ГП_ОСВПоУслугам.СформироватьТабличныйДокументАктаОСВПоАбонентуПоДаннымЗаполнения(
        ДанныеЗаполнения, ДанныеЗаполненияШапки, ДокументРезультат);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий
// Гарант+ Килипенко 14.01.2025 [F00233364] Отчет ОСВ по услугам --

// Гарант+ Килипенко 14.01.2025 [F00233364] Отчет ОСВ по услугам ++
#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСчетаИсключения()
	СчетаИсключения = ПланыСчетов.Хозрасчетный.СчетаНДСПоАренднымОбязательствам();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		СчетаИсключения, ПланыСчетов.Хозрасчетный.СчетаПроцентовПоОбязательствам());
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.РасчетыНДСНалоговогоАгента);
	СчетаИсключения.Добавить(ПланыСчетов.Хозрасчетный.КорректировкаРасчетовПрошлогоПериода);

    РезультатФункции = Новый СписокЗначений;
    РезультатФункции.ЗагрузитьЗначения(СчетаИсключения);

	Возврат РезультатФункции;
КонецФункции

Функция ПолучитьСчетаНДСПоАренднымОбязательствам()
    РезультатФункции = Новый СписокЗначений;

    МассивСчетовНДСАрнелы = ПланыСчетов.Хозрасчетный.СчетаНДСПоАренднымОбязательствам();

    РезультатФункции.ЗагрузитьЗначения(МассивСчетовНДСАрнелы);
	Возврат РезультатФункции;
КонецФункции

Функция ПолучитьСчетаУчетаВзаиморасчетов()
    РезультатФункции = Новый СписокЗначений;

	ТаблицаСчетов = УчетВзаиморасчетов.ПолучитьТаблицуСчетовУчетаВзаиморасчетов(Истина, Ложь);

    Для каждого СтрокаСчета Из ТаблицаСчетов Цикл
    	РезультатФункции.Добавить(СтрокаСчета.СчетРасчетов);
    КонецЦикла;

    Возврат РезультатФункции;
КонецФункции

Функция ИсключитьУсловиеФильтрацииДоговоровИзЗапроса(Знач ТекстЗапроса)
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Субконто2 В (&МассивДоговоров)", "");
    Возврат ТекстЗапроса;
КонецФункции

Функция ПолучитьОсновнойНаборДанных()
    Возврат ЭтотОбъект.СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1;
КонецФункции

Процедура ИнициализироватьПараметры()
    // Установка границ периода отчета
    УточнитьПараметрыПериодаОтчета();

    // Заполняем параметр АналитикаРасчетов
    АналитикаРасчетов = Новый СписокЗначений;
    АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
    АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
    БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.Настройки, "АналитикаРасчетов", АналитикаРасчетов);

    // Заполняем параметр СчетаНДСПоАренде
    СчетаНДСПоАренде = ПолучитьСчетаНДСПоАренднымОбязательствам();
    БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.Настройки, "СчетаНДСПоАренде", СчетаНДСПоАренде);

    // Заполняем параметр ФильтрСписокСчетов
    ФильтрСписокСчетов = ПолучитьСчетаУчетаВзаиморасчетов();
    БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.Настройки, "ФильтрСписокСчетов", ФильтрСписокСчетов);

    ПараметрФильтрСписокСчетов =
        БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(
            ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки, "ФильтрСписокСчетов");
    Если ПараметрФильтрСписокСчетов <> Неопределено
                И (ПараметрФильтрСписокСчетов.Значение = Неопределено
                    ИЛИ (ТипЗнч(ПараметрФильтрСписокСчетов.Значение) = Тип("СписокЗначений") И ПараметрФильтрСписокСчетов.Значение.Количество() = 0)) Тогда
        БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
            ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки, "ФильтрСписокСчетов", ФильтрСписокСчетов);
    КонецЕсли;

    // Уточняем условие отбора по договорам
    ПараметрМассивДоговоров = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки, "МассивДоговоров");
    Если ПараметрМассивДоговоров.Использование = Ложь Тогда
        НаборыДанных = ПолучитьОсновнойНаборДанных();
        НаборыДанных.Запрос =
            ИсключитьУсловиеФильтрацииДоговоровИзЗапроса(НаборыДанных.Запрос);
    КонецЕсли;
КонецПроцедуры

Функция УточнитьПараметрыПериодаОтчета()
    РезультатФункции = Новый Структура("НачалоПериода, КонецПериода", Дата(1, 1, 1), Дата(1, 1, 1));

    ПараметрПериодОтчета =
        БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(
            ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки, "ПериодОтчета");

    РезультатФункции.НачалоПериода = Новый Граница(НачалоДня(ПараметрПериодОтчета.Значение.ДатаНачала), ВидГраницы.Включая);
    РезультатФункции.КонецПериода = Новый Граница(КонецДня(ПараметрПериодОтчета.Значение.ДатаОкончания), ВидГраницы.Включая);

    БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.Настройки, "НачалоПериода", РезультатФункции.НачалоПериода);

    БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек.Настройки, "КонецПериода", РезультатФункции.КонецПериода);

    Возврат РезультатФункции;
КонецФункции

Функция ПодготовитТаблицуОтчета(Знач ИсходнаяТаблица)
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   *
        |ПОМЕСТИТЬ ВТ_ИсходнаяТаблица
        |ИЗ
        |   &ИсходнаяТаблица КАК ИсходнаяТаблица
        |;
        |
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |    ВТ_ИсходнаяТаблица.Контрагент КАК Контрагент,
        |    ВТ_ИсходнаяТаблица.Дата КАК Дата,
        |    ВТ_ИсходнаяТаблица.Документ КАК Документ,
        |    ВТ_ИсходнаяТаблица.Договор КАК Договор,
        |    ВТ_ИсходнаяТаблица.КорСчет КАК КорСчет,
        |    ВТ_ИсходнаяТаблица.Дебет КАК Дебет,
        |    ВТ_ИсходнаяТаблица.Кредит КАК Кредит,
        |    ВТ_ИсходнаяТаблица.ОстатокНаНачало КАК ОстатокНаНачало,
        |    ВТ_ИсходнаяТаблица.ОстатокНаНачалоДт КАК ОстатокНаНачалоДт,
        |    ВТ_ИсходнаяТаблица.ОстатокНаНачалоКт КАК ОстатокНаНачалоКт,
        |    ВТ_ИсходнаяТаблица.Оборот КАК Оборот,
        |    ВТ_ИсходнаяТаблица.ОборотДт КАК ОборотДт,
        |    ВТ_ИсходнаяТаблица.ОборотКт КАК ОборотКт,
        |    ВТ_ИсходнаяТаблица.ОстатокНаКонец КАК ОстатокНаКонец,
        |    ВТ_ИсходнаяТаблица.ОстатокНаКонецДт КАК ОстатокНаКонецДт,
        |    ВТ_ИсходнаяТаблица.ОстатокНаКонецКт КАК ОстатокНаКонецКт
        |ИЗ
        |    ВТ_ИсходнаяТаблица КАК ВТ_ИсходнаяТаблица
        |
        |ИТОГИ
        |    МАКСИМУМ(ВТ_ИсходнаяТаблица.ОстатокНаНачало),
        |    МАКСИМУМ(ВТ_ИсходнаяТаблица.ОстатокНаНачалоДт),
        |    МАКСИМУМ(ВТ_ИсходнаяТаблица.ОстатокНаНачалоКт),
        |    МАКСИМУМ(ВТ_ИсходнаяТаблица.Оборот),
        |    МАКСИМУМ(ВТ_ИсходнаяТаблица.ОборотДт),
        |    МАКСИМУМ(ВТ_ИсходнаяТаблица.ОборотКт),
        |    МАКСИМУМ(ВТ_ИсходнаяТаблица.ОстатокНаКонец),
        |    МАКСИМУМ(ВТ_ИсходнаяТаблица.ОстатокНаКонецДт),
        |    МАКСИМУМ(ВТ_ИсходнаяТаблица.ОстатокНаКонецКт),
        |    СУММА(ВТ_ИсходнаяТаблица.Дебет),
        |    СУММА(ВТ_ИсходнаяТаблица.Кредит)
        |ПО
        |    Контрагент
        |";

    Запрос.УстановитьПараметр("ИсходнаяТаблица", ИсходнаяТаблица);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 14.01.2025 [F00233364] Отчет ОСВ по услугам --
