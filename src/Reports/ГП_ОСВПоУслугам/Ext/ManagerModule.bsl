// Гарант+ Килипенко 14.01.2025 [F00233364] Отчет ОСВ по услугам ++
#Область ПрограммныйИнтерфейс

// Возвращаемое значение:
//  - ТабличныйДокумент
Функция СформироватьТабличныйДокументАктаОСВПоУслугамПоДаннымЗаполнения(
        Знач ДанныеЗаполненияТЧ, Знач ДанныеЗаполненияШапки, Знач ТабличныйДокумент = Неопределено, Знач МакетАкта = Неопределено) Экспорт

    УстановитьПривилегированныйРежим(Истина);

    МакетАкта = ?(МакетАкта = Неопределено, ПолучитьМакетаАктаОСВПоУслугам(), МакетАкта);

    ТабличныйДокумент = ?(ТабличныйДокумент = Неопределено, Новый ТабличныйДокумент, ТабличныйДокумент);
    ТабличныйДокумент.ПолеСлева = 5;
    ТабличныйДокумент.ПолеСправа = 5;
    ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
    ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
    ТабличныйДокумент.АвтоМасштаб = Истина;
    ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
    ТабличныйДокумент.ТолькоПросмотр = Истина;

    ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ГП_ОСВПоУслугам_АктСверкиПоУслугам";

    Если ДанныеЗаполненияТЧ.Строки.Количество() = 0 Тогда
        // Документ без данных
        ОбщегоНазначения.СообщитьПользователю("Данные отсутствуют");
        Возврат ТабличныйДокумент;
    КонецЕсли;

    // Общие реквизиты шапки
    ОбластьШапки = МакетАкта.ПолучитьОбласть("Заголовок");

    // За период
    ДатаНачалаОтчета = ДанныеЗаполненияШапки.ДатаНачала;
    Если ЗначениеЗаполнено(ДатаНачалаОтчета) Тогда
        ЗаПериод = ПредставлениеПериода(НачалоДня(ДатаНачалаОтчета), КонецДня(ДанныеЗаполненияШапки.ДатаОкончания), "ФП = Истина");
        ОбластьШапки.Параметры.ЗаПериод = СтрШаблон(НСтр("ru='за период: %1'"), ЗаПериод);
    КонецЕсли;

    ТабличныйДокумент.Вывести(ОбластьШапки);

    СтруктураОбщихИтогов = Новый Структура("ОборотДт, ОборотКт, ОстатокНаКонецДт, ОстатокНаКонецКт", 0, 0, 0, 0);
    НомерСтроки = 0;
    Для Каждого СтрокаДанныхКонтрагента Из ДанныеЗаполненияТЧ.Строки Цикл
        НомерСтроки = НомерСтроки + 1;

        // Получаем макеты остатков
        ОбластьЗаголовокТаблицы = МакетАкта.ПолучитьОбласть("ЗаголовокТаблицы");
        ОбластьНачальноеСальдо = МакетАкта.ПолучитьОбласть("НачОстатки");
        ОбластьОбороты = МакетАкта.ПолучитьОбласть("ОборотыИтог");
        ОбластьКонечноеСальдо = МакетАкта.ПолучитьОбласть("КонОстатки");

        // Остатки и обороты
        ДанныеЗаполненияИтогов = СтрокаДанныхКонтрагента;
        ОбластьНачальноеСальдо.Параметры.Заполнить(ДанныеЗаполненияИтогов);
        ОбластьОбороты.Параметры.Заполнить(ДанныеЗаполненияИтогов);
        ОбластьКонечноеСальдо.Параметры.Заполнить(ДанныеЗаполненияИтогов);

        // Контрагент
        СведенияОКонтрагенте = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
                СтрокаДанныхКонтрагента.Контрагент, ДанныеЗаполненияШапки.ДатаАктаСверки);
        НаименованиеКонтрагента = СведенияОКонтрагенте.НаименованиеДляПечатныхФорм;
        ОбластьНачальноеСальдо.Параметры.НаименованиеКонтрагента = НаименованиеКонтрагента;
        ОбластьНачальноеСальдо.Параметры.Контрагент = СтрокаДанныхКонтрагента.Контрагент;

        Если НомерСтроки = 1 Тогда
            ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
        КонецЕсли;

        ТабличныйДокумент.Вывести(ОбластьНачальноеСальдо);
        МассивОбластейДетальныхЗаписей = ЗаполнитьТаблицуДокументаПоКонтрагенту(
                СтрокаДанныхКонтрагента, ДанныеЗаполненияШапки, ТабличныйДокумент, МакетАкта);
        Для Каждого ОбластьДетальнойЗаписи Из МассивОбластейДетальныхЗаписей Цикл
            ТабличныйДокумент.Вывести(ОбластьДетальнойЗаписи);
        КонецЦикла;
        ТабличныйДокумент.Вывести(ОбластьОбороты);
        ТабличныйДокумент.Вывести(ОбластьКонечноеСальдо);

        // Аккумуляция общих итогов
        СтруктураОбщихИтогов.ОборотДт = СтруктураОбщихИтогов.ОборотДт + ДанныеЗаполненияИтогов.ОборотДт;
        СтруктураОбщихИтогов.ОборотКт = СтруктураОбщихИтогов.ОборотКт + ДанныеЗаполненияИтогов.ОборотКт;
        СтруктураОбщихИтогов.ОстатокНаКонецДт = СтруктураОбщихИтогов.ОстатокНаКонецДт + ДанныеЗаполненияИтогов.ОстатокНаКонецДт;
        СтруктураОбщихИтогов.ОстатокНаКонецКт = СтруктураОбщихИтогов.ОстатокНаКонецКт + ДанныеЗаполненияИтогов.ОстатокНаКонецКт;
    КонецЦикла;

    // Вывод общих итогов
    ОбластьОбщихИтогов = МакетАкта.ПолучитьОбласть("ОбщиеИтоги");
    ОбластьОбщихИтогов.Параметры.Заполнить(СтруктураОбщихИтогов);
    ТабличныйДокумент.Вывести(ОбластьОбщихИтогов);

    // Вывод подвала
    ОбластьПодвала = МакетАкта.ПолучитьОбласть("Подвал");
    ОбластьПодвала.Параметры.Заполнить(ДанныеЗаполненияШапки);
    ОбластьПодвала.Параметры.ФИОРуководителя = ПолучитьФИОРуководителя(
            ДанныеЗаполненияШапки.Организация, ДанныеЗаполненияШапки.ДатаАктаСверки);
    ОбластьПодвала.Параметры.ФИОГлБухгалтера = ПолучитьФИОГлавногоБухгалтера(
            ДанныеЗаполненияШапки.Организация, ДанныеЗаполненияШапки.ДатаАктаСверки);
    ТабличныйДокумент.Вывести(ОбластьПодвала);

    Если ПривилегированныйРежим() Тогда
        УстановитьПривилегированныйРежим(Ложь);
    КонецЕсли;

    Возврат ТабличныйДокумент;
КонецФункции

// Возвращаемое значение:
//  - ТабличныйДокумент
Функция ПолучитьМакетаАктаОСВПоУслугам() Экспорт
    Возврат Отчеты.ГП_ОСВПоУслугам.ПолучитьМакет("ПФ_MXL_АктСверкиПоУслугам");
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 14.01.2025 [F00233364] Отчет ОСВ по услугам --

// Гарант+ Килипенко 14.01.2025 [F00233364] Отчет ОСВ по услугам ++
#Область СлужебныеПроцедурыИФункции

Функция ЗаполнитьТаблицуДокументаПоКонтрагенту(
        Знач ДанныеЗаполненияТЧ, Знач ДанныеЗаполненияШапки,
        Знач ТабличныйДокумент = Неопределено, Знач МакетАкта = Неопределено)

    РезультатФункции = Новый Массив;

    НомерСтроки = 0;
    Для Каждого СтрокаДанныхТЧ Из ДанныеЗаполненияТЧ.Строки Цикл
        НомерСтроки = НомерСтроки + 1;

        ОбластьМакета = МакетАкта.ПолучитьОбласть("Обороты");
        ОбластьМакета.Параметры.Заполнить(СтрокаДанныхТЧ);

        РезультатФункции.Добавить(ОбластьМакета);
    КонецЦикла;

    Возврат РезультатФункции;
КонецФункции

Функция ПолучитьФИОГлавногоБухгалтера(Знач Организация, Знач ДатаАктуальности)
    Возврат ГП_РаботаСОтчетами.ПолучитьФИОПредставителя(
        "ГлавныйБухгалтер", Организация, ДатаАктуальности);
КонецФункции

Функция ПолучитьФИОРуководителя(Знач Организация, Знач ДатаАктуальности)
    Возврат ГП_РаботаСОтчетами.ПолучитьФИОПредставителя(
        "Директор", Организация, ДатаАктуальности);
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 14.01.2025 [F00233364] Отчет ОСВ по услугам --
