// Гарант+ Килипенко 24.10.2024 [F00229978] Отчет ОСВ по абоненту ++
#Область ПрограммныйИнтерфейс

// Возвращаемое значение:
//  - ТабличныйДокумент
Функция СформироватьТабличныйДокументАктаОСВПоАбонентуПоДаннымЗаполнения(
        Знач ДанныеЗаполненияТЧ, Знач ДанныеЗаполненияШапки, Знач ТабличныйДокумент = Неопределено, Знач МакетАкта = Неопределено) Экспорт

    МакетАкта = ?(МакетАкта = Неопределено, ПолучитьМакетаАктаОСВПоАбоненту(), МакетАкта);

    ТабличныйДокумент = ?(ТабличныйДокумент = Неопределено, Новый ТабличныйДокумент, ТабличныйДокумент);
    ТабличныйДокумент.ПолеСлева = 5;
    ТабличныйДокумент.ПолеСправа = 5;
    ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
    ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
    ТабличныйДокумент.АвтоМасштаб = Истина;
    ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
    ТабличныйДокумент.ТолькоПросмотр = Истина;

    ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ГП_ОСВПоАбоненту_АктОСВПоАбоненту";

    Если ДанныеЗаполненияТЧ.Количество() = 0 Тогда
        // Документ без данных
        ОбщегоНазначения.СообщитьПользователю("Данные отсутствуют");
        Возврат ТабличныйДокумент;
    КонецЕсли;

    // Общие реквизиты шапки
    ОбластьМакета = МакетАкта.ПолучитьОбласть("Заголовок");

    // Данные участников
    СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
            ДанныеЗаполненияШапки.Организация, ДанныеЗаполненияШапки.ДатаАктаСверки);
    НазваниеОрганизации = СведенияОбОрганизации.НаименованиеДляПечатныхФорм;

    СведенияОКонтрагенте = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
            ДанныеЗаполненияШапки.Контрагент, ДанныеЗаполненияШапки.ДатаАктаСверки);
    НаименованиеКонтрагента = СведенияОКонтрагенте.НаименованиеДляПечатныхФорм;
    ОбластьМакета.Параметры.НаименованиеКонтрагента = НаименованиеКонтрагента;

    // За период
    ДатаНачалаОтчета = ДанныеЗаполненияШапки.ДатаНачала;
    Если ЗначениеЗаполнено(ДатаНачалаОтчета) Тогда
        ЗаПериод = ПредставлениеПериода(НачалоДня(ДатаНачалаОтчета), КонецДня(ДанныеЗаполненияШапки.ДатаОкончания), "ФП = Истина");
        ОбластьМакета.Параметры.ЗаПериод = СтрШаблон(НСтр("ru='за период: %1'"), ЗаПериод);
    КонецЕсли;

    ТабличныйДокумент.Вывести(ОбластьМакета);

    // Создаем массив для проверки вывода
    МассивВыводимыхОбластей = Новый Массив;

    // Выводим многострочную часть документа
    ОбластьЗаголовокТаблицы = МакетАкта.ПолучитьОбласть("ЗаголовокТаблицы");
    ОбластьНачальноеСальдо = МакетАкта.ПолучитьОбласть("НачОстатки");
    ОбластьОбороты = МакетАкта.ПолучитьОбласть("ОборотыИтог");
    ОбластьКонечноеСальдо = МакетАкта.ПолучитьОбласть("КонОстатки");
    ОбластьПодвала = МакетАкта.ПолучитьОбласть("Подвал");

    // Остатки и обороты
    ДанныеЗаполненияИтогов = ДанныеЗаполненияТЧ[0];
    ОбластьНачальноеСальдо.Параметры.Заполнить(ДанныеЗаполненияИтогов);
    ОбластьОбороты.Параметры.Заполнить(ДанныеЗаполненияИтогов);
    ОбластьКонечноеСальдо.Параметры.Заполнить(ДанныеЗаполненияИтогов);

    КоличествоСтрокДанныхТЧ = ДанныеЗаполненияТЧ.Количество();
    НомерСтроки = 0;
    Для Каждого СтрокаДанныхТЧ Из ДанныеЗаполненияТЧ Цикл
        ОбластьМакета = МакетАкта.ПолучитьОбласть("Обороты");

        НомерСтроки = НомерСтроки + 1;

        ОбластьМакета.Параметры.Заполнить(СтрокаДанныхТЧ);

        Если НомерСтроки = 1 Тогда
            ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
            ТабличныйДокумент.Вывести(ОбластьНачальноеСальдо);
        Иначе
            МассивВыводимыхОбластей.Очистить();
            МассивВыводимыхОбластей.Добавить(ОбластьМакета);
            Если НомерСтроки = КоличествоСтрокДанныхТЧ Тогда
                МассивВыводимыхОбластей.Добавить(ОбластьОбороты);
                МассивВыводимыхОбластей.Добавить(ОбластьКонечноеСальдо);
                МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
            КонецЕсли;
            Если НомерСтроки <> 1 И НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
                ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
                ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
            КонецЕсли;
        КонецЕсли;

        ТабличныйДокумент.Вывести(ОбластьМакета);

    КонецЦикла;

    ТабличныйДокумент.Вывести(ОбластьОбороты);
    ТабличныйДокумент.Вывести(ОбластьКонечноеСальдо);

    ОбластьПодвала.Параметры.Заполнить(ДанныеЗаполненияШапки);
    ОбластьПодвала.Параметры.ФИОПредставителя = "Антипова О.А."; // Фиксированно по ТЗ
    ОбластьПодвала.Параметры.НазваниеОрганизации = НазваниеОрганизации;
    ОбластьПодвала.Параметры.НаименованиеКонтрагента = НаименованиеКонтрагента;
    ТабличныйДокумент.Вывести(ОбластьПодвала);

    Если ПривилегированныйРежим() Тогда
        УстановитьПривилегированныйРежим(Ложь);
    КонецЕсли;

    Возврат ТабличныйДокумент;
КонецФункции

// Возвращаемое значение:
//  - ТабличныйДокумент
Функция ПолучитьМакетаАктаОСВПоАбоненту() Экспорт
    Возврат Отчеты.ГП_ОСВПоАбоненту.ПолучитьМакет("ПФ_MXL_АктСверки");
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 24.10.2024 [F00229978] Отчет ОСВ по абоненту --
