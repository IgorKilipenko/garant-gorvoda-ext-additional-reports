#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;

    // Инициализация параметров
    БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(ЭтотОбъект.КомпоновщикНастроек, "ВидДоговораАбонентскийОтдел",
        ГП_РаботаСДоговорами.ПолучитьДополнительныйВидДоговораАбонентскийОтдел().Ссылка);
    ОрганизацияПоУмолчанию = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию();
    БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек, "Организация", ОрганизацияПоУмолчанию);

    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных,
            ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);

    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;

    // Заполнение временных таблиц
    МВТ = Новый МенеджерВременныхТаблиц;
    ПараметрПериод = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(
        ЭтотОбъект.КомпоновщикНастроек, "Период");
    МВТ = Отчеты.ГП_ЗаполненностьСведенийАбонентов.ПолучитьТаблицуДинамическихПоказателей(
        ?(ТипЗнч(ПараметрПериод.Значение) = Тип("Дата"), ПараметрПериод.Значение, ПараметрПериод.Значение.Дата), МВТ);

    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина, Истина, МВТ);

    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
    ПроцессорВывода.Вывести(ПроцессорКомпоновки);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий
