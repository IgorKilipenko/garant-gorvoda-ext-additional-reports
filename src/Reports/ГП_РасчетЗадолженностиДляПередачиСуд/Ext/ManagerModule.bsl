// Гарант+ Килипенко 27.01.2025 [F00233937] Отчет Расчет сумм задолженности для передачи в суд ++
#Область ПрограммныйИнтерфейс

Функция СформироватьДокументОтчета(Знач СтруктураДанныхЗаполнения, Знач ТабличныйДокумент = Неопределено, Знач Макет = Неопределено) Экспорт
    Макет = ?(Макет = Неопределено, ПолучитьОсновнойМакет(), Макет);
    ТабличныйДокумент = ?(ТабличныйДокумент = Неопределено, Новый ТабличныйДокумент, ТабличныйДокумент);

    ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
    ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");

    // За период
    Если ЗначениеЗаполнено(СтруктураДанныхЗаполнения.ОбщиеДанные.ПериодОтчета.ДатаНачала) Тогда
        ПредставлениеПериодаОтчета = ПредставлениеПериода(НачалоДня(СтруктураДанныхЗаполнения.ОбщиеДанные.ПериодОтчета.ДатаНачала),
            КонецДня(СтруктураДанныхЗаполнения.ОбщиеДанные.ПериодОтчета.ДатаОкончания), "ФП = Истина");

        ОбластьЗаголовок.Параметры.ПредставлениеПериода = СтрШаблон(НСтр("ru='за период: %1'"), ПредставлениеПериодаОтчета);
    КонецЕсли;
    ТабличныйДокумент.Вывести(ОбластьЗаголовок);

    ДанныеЗаполненияТЧ = ПодготовитьДанныеЗаполнения(СтруктураДанныхЗаполнения.ТаблицаИсходныхДанных);

    Для Каждого СтрокаКонтрагента Из ДанныеЗаполненияТЧ.Начисления.Строки Цикл
        // Вывод Наименования таблицы
        ОбластьНаименованиеТаблицы = Макет.ПолучитьОбласть("НаименованиеТаблицы");
        ПолноеНаименованиеКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаКонтрагента.Контрагент, "НаименованиеПолное");
        ОбластьНаименованиеТаблицы.Параметры.ПолноеНаименованиеКонтрагента = ПолноеНаименованиеКонтрагента;
        ОбластьНаименованиеТаблицы.Параметры.Контрагент = СтрокаКонтрагента.Контрагент;
        ТабличныйДокумент.Вывести(ОбластьНаименованиеТаблицы);

        // Вывод Заголовка таблицы
        ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
        ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

        Для Каждого СтрокаПериода Из СтрокаКонтрагента.Строки Цикл
            ОбластиДляВывода = Новый Массив;

            ОбластьСтрокаТаблицыПериод = Макет.ПолучитьОбласть("СтрокаТаблицыПериод");
            ОбластьСтрокаТаблицыПериод.Параметры.Период = СтрокаПериода.Период;
            ОбластиДляВывода.Добавить(ОбластьСтрокаТаблицыПериод);

            СоответствиеСтрокНоменклатур = Новый Соответствие;
            МассивДокументов = Новый Массив;
            Для Каждого СтрокаДокумента Из СтрокаПериода.Строки Цикл
                // Аккумуляция сумм по номенклатурным группам (для всех документов)
                Для Каждого СтрокаДанных Из СтрокаДокумента.Строки Цикл
                    Если СоответствиеСтрокНоменклатур.Получить(СтрокаДанных.НоменклатурнаяГруппа) = Неопределено Тогда
                        СоответствиеСтрокНоменклатур.Вставить(СтрокаДанных.НоменклатурнаяГруппа,
                            Новый Структура("Количество, Тариф, СуммаБезНДС, СуммаНДС, Сумма", 0, 0, 0, 0, 0));
                    КонецЕсли;

                    ТекущаяНомГруппа = СоответствиеСтрокНоменклатур.Получить(СтрокаДанных.НоменклатурнаяГруппа);
                    ТекущаяНомГруппа.Количество = ТекущаяНомГруппа.Количество + СтрокаДанных.Количество;
                    ТекущаяНомГруппа.СуммаБезНДС = ТекущаяНомГруппа.СуммаБезНДС + СтрокаДанных.СуммаБезНДС;
                    ТекущаяНомГруппа.СуммаНДС = ТекущаяНомГруппа.СуммаНДС + СтрокаДанных.СуммаНДС;
                    ТекущаяНомГруппа.Сумма = ТекущаяНомГруппа.Сумма + СтрокаДанных.Сумма;

                    МассивДокументов.Добавить(СтрокаДанных.ДокументНачисления);
                КонецЦикла;
            КонецЦикла;

            // Удаление дублей документов
            ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(МассивДокументов);

            // Заполнение детальных записей таблицы (по ном. группам)
            СуммаПоДокументам = 0;
            Для Каждого НомГруппаКЗ Из СоответствиеСтрокНоменклатур Цикл
                ОбластьСтрокаТаблицыНоменклатура = Макет.ПолучитьОбласть("СтрокаТаблицыНоменклатура");

                ОбластьСтрокаТаблицыНоменклатура.Параметры.Заполнить(НомГруппаКЗ.Значение);
                ОбластьСтрокаТаблицыНоменклатура.Параметры.НоменклатурнаяГруппаНаименование = Строка(НомГруппаКЗ.Ключ);
                ОбластьСтрокаТаблицыНоменклатура.Параметры.НоменклатурнаяГруппа = НомГруппаКЗ.Ключ;
                ОбластьСтрокаТаблицыНоменклатура.Параметры.Тариф = НомГруппаКЗ.Значение.СуммаБезНДС / НомГруппаКЗ.Значение.Количество;

                СуммаПоДокументам = СуммаПоДокументам + СтрокаДанных.Сумма;
                ОбластиДляВывода.Добавить(ОбластьСтрокаТаблицыНоменклатура);
            КонецЦикла;

            // Вывод детальных записей таблицы
            Для каждого ОбластьСтроки Из ОбластиДляВывода Цикл
                ТабличныйДокумент.Вывести(ОбластьСтроки);
            КонецЦикла;

            ОбластьСтрокаТаблицыИтогиЗаПериод = Макет.ПолучитьОбласть("СтрокаТаблицыИтогиЗаПериод");
            ОбластьСтрокаТаблицыИтогиЗаПериод.Параметры.Сумма = СуммаПоДокументам;
            ОбластьСтрокаТаблицыИтогиЗаПериод.Параметры.Документ = Неопределено;
            ОбластьСтрокаТаблицыИтогиЗаПериод.Параметры.ДокументПредставление = "";
            Для Каждого ТекущийДокумент Из МассивДокументов Цикл
                ОбластьСтрокаТаблицыИтогиЗаПериод.Параметры.Документ = ТекущийДокумент; // Расшифровка

                // Формирование представления списка документов
                ОбластьСтрокаТаблицыИтогиЗаПериод.Параметры.ДокументПредставление =
                    СтрШаблон("%1; %2", ОбластьСтрокаТаблицыИтогиЗаПериод.Параметры.ДокументПредставление, ТекущийДокумент);
            КонецЦикла;

            // Очистка списка документов от ведущего разделителя (,)
            Если СтрДлина(ОбластьСтрокаТаблицыИтогиЗаПериод.Параметры.ДокументПредставление) > 0 Тогда
                ОбластьСтрокаТаблицыИтогиЗаПериод.Параметры.ДокументПредставление =
                    Сред(ОбластьСтрокаТаблицыИтогиЗаПериод.Параметры.ДокументПредставление, 3);
            КонецЕсли;

            // Расчет суммы оплат для итога за период
            НайденныеСтрокиОплат = ДанныеЗаполненияТЧ.Оплаты.НайтиСтроки(
                    Новый Структура("Контрагент, Учтено", СтрокаКонтрагента.Контрагент, 0));

            СуммаОплатыПоКонтрагенту = 0;
            Для Каждого СтрокаДанных Из НайденныеСтрокиОплат Цикл
                Если СтрокаДанных.Период < СтрокаПериода.Период Тогда
                    Продолжить;
                КонецЕсли;

                СуммаОплатыПоКонтрагенту = СуммаОплатыПоКонтрагенту + СтрокаДанных.Сумма;
                СтрокаДанных.Учтено = СтрокаДанных.Сумма;
            КонецЦикла;

            // Заполнение задолженности за период по контрагенту
            ОбластьСтрокаТаблицыИтогиЗаПериод.Параметры.СуммаОплаты = СуммаОплатыПоКонтрагенту; // Сумма оплат
            ОбластьСтрокаТаблицыИтогиЗаПериод.Параметры.СуммаЗадолженности =
                СуммаПоДокументам - СуммаОплатыПоКонтрагенту; // Остаток задолженности

            // Вывод итога за период
            ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыИтогиЗаПериод);
        КонецЦикла;

        // Вывод подвала по Контрагенту
        ОбластьПодвал.Параметры.ИОФНачальникСлужбыРеализации = "А.В. Носенков";
        ТабличныйДокумент.Вывести(ОбластьПодвал);
    КонецЦикла;

    Возврат ТабличныйДокумент;
КонецФункции

Функция ПолучитьОсновнойМакет() Экспорт
    Возврат Отчеты.ГП_РасчетЗадолженностиДляПередачиСуд.ПолучитьМакет("ПФ_Макет");
КонецФункции

Функция ПодготовитьДанныеЗаполнения(Знач ТаблицаИсходныхДанных) Экспорт
    МВТ = Новый МенеджерВременныхТаблиц;
    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = МВТ;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   *
        |ПОМЕСТИТЬ ВТ_ТаблицаИсходныхДанных
        |ИЗ
        |   &ТаблицаИсходныхДанных КАК ТаблицаИсходныхДанных
        |;
        |
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   Месяц КАК Месяц,
        |   Контрагент КАК Контрагент,
        |   НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
        |   ДокументНачисления КАК ДокументНачисления,
        |   СУММА(СуммаНачисления) КАК СуммаНачисления,
        |   СУММА(СуммаБезНДСНачисления) КАК СуммаБезНДСНачисления,
        |   СУММА(СуммаНДСНачисления) КАК СуммаНДСНачисления,
        |   СУММА(КоличествоНачисления) КАК КоличествоНачисления
        |ПОМЕСТИТЬ ВТ_ТаблицаИсходныхДанных_Подготовка
        |ИЗ
        |   ВТ_ТаблицаИсходныхДанных КАК ВТ_ТаблицаИсходныхДанных
        |СГРУППИРОВАТЬ ПО
        |   Месяц,
        |   Контрагент,
        |   НоменклатурнаяГруппа,
        |   ДокументНачисления
        |ИМЕЮЩИЕ
        |   ДокументНачисления <> НЕОПРЕДЕЛЕНО
        |;";

        Запрос.УстановитьПараметр("ТаблицаИсходныхДанных", ТаблицаИсходныхДанных);
    Запрос.Выполнить(); // Формирование Временных таблиц

    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = МВТ;
    Запрос.Текст =
        "// Результат [0] Начисления
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   Месяц КАК Период,
        |   Контрагент КАК Контрагент,
        |   НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
        |   ДокументНачисления КАК ДокументНачисления,
        |   СуммаНачисления КАК Сумма,
        |   СуммаБезНДСНачисления КАК СуммаБезНДС,
        |   СуммаНДСНачисления КАК СуммаНДС,
        |   КоличествоНачисления КАК Количество
        |ИЗ
        |   ВТ_ТаблицаИсходныхДанных_Подготовка КАК ВТ_ТаблицаИсходныхДанных
        |
        |УПОРЯДОЧИТЬ ПО
        |   Контрагент,
        |   Месяц,
        |   НоменклатурнаяГруппа,
        |   ДокументНачисления
        |ИТОГИ
        |   СУММА(СуммаНачисления),
        |   СУММА(СуммаБезНДСНачисления),
        |   СУММА(СуммаНДСНачисления),
        |   СУММА(КоличествоНачисления)
        |ПО
        |   Контрагент,
        |   Месяц,
        |   ДокументНачисления
        |;
        |
        |// Результат [1] Оплаты
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   Месяц КАК Период,
        |   Контрагент КАК Контрагент,
        |   ДокументОплаты КАК ДокументОплаты,
        |   СУММА(СуммаОплаты) КАК Сумма,
        |   СУММА(СуммаБезНДСОплаты) КАК СуммаБезНДС,
        |   СУММА(СуммаНДСОплаты) КАК СуммаНДС,
        |   ВЫРАЗИТЬ(0 КАК ЧИСЛО(21, 2)) КАК Учтено
        |ИЗ
        |   ВТ_ТаблицаИсходныхДанных КАК ВТ_ТаблицаИсходныхДанных
        |
        |СГРУППИРОВАТЬ ПО
        |   ВТ_ТаблицаИсходныхДанных.Месяц,
        |   Контрагент,
        |   ДокументОплаты
        |ИМЕЮЩИЕ
        |   ДокументОплаты <> НЕОПРЕДЕЛЕНО
        |УПОРЯДОЧИТЬ ПО
        |   Контрагент,
        |   Месяц,
        |   ДокументОплаты
        |;
        |";

    РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();

    ДеревоНачислений = РезультатПакетаЗапросов[0].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
    ТаблицаОплат = РезультатПакетаЗапросов[1].Выгрузить();

    РезультатФункции = Новый Структура("Начисления, Оплаты", ДеревоНачислений, ТаблицаОплат);
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 27.01.2025 [F00233937] Отчет Расчет сумм задолженности для передачи в суд --
