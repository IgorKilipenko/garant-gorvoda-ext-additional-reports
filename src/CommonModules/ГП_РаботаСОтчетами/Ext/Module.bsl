// Гарант+ Килипенко 05.11.2024 [F00230266] Отчет по шифрам ++
#Область ПрограммныйИнтерфейс

// Параметры:
//  Отчет - ОтчетОбъект
//  Наименование - Строка
Функция ПолучитьПараметрПоНаименованию(Знач Отчет, Знач Наименование) Экспорт
    РезультатФункции = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(
            Отчет.КомпоновщикНастроек.ПользовательскиеНастройки, Наименование);
    Если РезультатФункции = Неопределено Тогда
        РезультатФункции = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(
                Отчет.КомпоновщикНастроек.Настройки, Наименование);
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  Отчет - ОтчетОбъект
//  Наименование - Строка
//  ЗначениеПоУмолчанию - Произвольный
//  ТолькоИспользуемый - Булево
// Возвращаемое значение:
//  Произвольный, Неопределено
Функция ПолучитьЗначениеПараметраПоНаименованию(
        Знач Отчет, Знач Наименование, Знач ЗначениеПоУмолчанию = Неопределено, Знач ТолькоИспользуемый = Истина) Экспорт

    НайденныйПараметр = ПолучитьПараметрПоНаименованию(Отчет, Наименование);
    Если НайденныйПараметр = Неопределено Тогда
        Возврат ЗначениеПоУмолчанию;
    КонецЕсли;

    Если ТолькоИспользуемый = Истина И НайденныйПараметр.Использование = Ложь Тогда
        Возврат ЗначениеПоУмолчанию;
    Иначе
        Возврат НайденныйПараметр.Значение;
    КонецЕсли;
КонецФункции

// Параметры:
//  НаименованиеНоменклатурнойГруппы - Строка
//  ПоУмолчанию - Строка, Неопределено
//  НегативноеВоздействиеКакСток - Булево
// Возвращаемое значение:
//  - Строка
Функция ПолучитьПредставлениеНаименованияНоменклатурнойГруппыВодаСток(
        Знач НаименованиеНоменклатурнойГруппы, Знач ПоУмолчанию = Неопределено, Знач НегативноеВоздействиеКакСток = Ложь) Экспорт

    ПоУмолчанию = ?(ПоУмолчанию = Неопределено, "<>", ПоУмолчанию);
    ЗначениеВода = "Вода";
    ЗначениеСток = "Сток";
    КэшСоответствий = Новый Соответствие;
    КэшСоответствий.Вставить("Водоснабжение", ЗначениеВода);
    КэшСоответствий.Вставить("Водоотведение", ЗначениеСток);
    КэшСоответствий.Вставить("Канализация", ЗначениеСток);

    НаименованиеНВ = ГП_РаботаСОтчетамиПовтИсп.ПолучитьНоменклатурнуюГруппуНегативногоВоздействия().Наименование;
    ПредставлениеНВ = ?(НегативноеВоздействиеКакСток = Истина, ЗначениеСток, "Негативное воздействие");
    КэшСоответствий.Вставить(НаименованиеНВ, ПредставлениеНВ);

    Для Каждого ЭлементКЗ Из КэшСоответствий Цикл
        Если СтрНачинаетсяС(НаименованиеНоменклатурнойГруппы, ЭлементКЗ.Ключ) Тогда
            Возврат ЭлементКЗ.Значение;
        КонецЕсли;
    КонецЦикла;

    Возврат ПоУмолчанию;
КонецФункции

// Параметры:
//  НоменклатурнаяГруппаСсылка - СправочникСсылка.НоменклатурныеГруппы
//  ПоУмолчанию - Строка, Неопределено
//  НегативноеВоздействиеКакСток - Булево
// Возвращаемое значение:
//  - Строка
Функция ПолучитьПредставлениеНоменклатурнойГруппыВодаСток(
        Знач НоменклатурнаяГруппаСсылка, Знач ПоУмолчанию = Неопределено, Знач НегативноеВоздействиеКакСток = Ложь) Экспорт

    НаименованиеНоменклатурнойГруппы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоменклатурнаяГруппаСсылка, "Наименование");

    Возврат ПолучитьПредставлениеНаименованияНоменклатурнойГруппыВодаСток(НаименованиеНоменклатурнойГруппы, ПоУмолчанию, НегативноеВоздействиеКакСток);
КонецФункции

// Параметры:
//  Должность - Строка
//  Организация - СправочникСсылка.Организации
//  ДатаАктуальности - Дата
// Возвращаемое значение:
//  - Строка
Функция ПолучитьФИОПредставителя(Знач Должность, Знач Организация, Знач ДатаАктуальности) Экспорт
    РезультатФункции = "";

    ОтветственныеЛицаОрганизации = ОтветственныеЛицаБППовтИсп.ОтветственныеЛица(Организация, ДатаАктуальности);

    ИмяПоляПредставления = Должность + "ФИО";
    Если ОтветственныеЛицаОрганизации.Свойство(ИмяПоляПредставления) Тогда
        РезультатФункции = ОтветственныеЛицаОрганизации[ИмяПоляПредставления].Представление;
    КонецЕсли;

    Если ПустаяСтрока(РезультатФункции) Тогда
        Если Должность = "ГлавныйБухгалтер" Тогда
            РезультатФункции = "Антипова О.А.";
        ИначеЕсли Должность = "Директор" Тогда
            РезультатФункции = "Машошин О.Л.";
        КонецЕсли;
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 05.11.2024 [F00230266] Отчет по шифрам --
